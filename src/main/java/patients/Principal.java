/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package patients;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        load();
        loadConsult();
        loadPending();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JLayeredPane();
        ProgramPanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        SearchBarPatients = new javax.swing.JTextField();
        SearchPatients = new javax.swing.JButton();
        PatientConsults = new javax.swing.JButton();
        PatientExams = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        PatientsTable = new javax.swing.JTable();
        CreatePatient = new javax.swing.JButton();
        CreateConsultPatient = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ConsultsTable = new javax.swing.JTable();
        SearchConsults = new javax.swing.JButton();
        SearchBarConsults = new javax.swing.JTextField();
        CreateConsult = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ExamsTable = new javax.swing.JTable();
        SearchExams = new javax.swing.JButton();
        SearchBarExams = new javax.swing.JTextField();
        CreateExam = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        PendingTable = new javax.swing.JTable();
        SearchPending = new javax.swing.JButton();
        SearchBarPending = new javax.swing.JTextField();
        DispatchConsult = new javax.swing.JButton();
        LoginPanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Reload = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(28, 158, 153));
        setPreferredSize(new java.awt.Dimension(1000, 600));

        MainPanel.setBackground(new java.awt.Color(28, 158, 153));

        ProgramPanel.setBackground(new java.awt.Color(28, 158, 153));
        ProgramPanel.setForeground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        SearchBarPatients.setForeground(Color.GRAY);
        SearchBarPatients.setText("No. Expediente, Nombre, Apellido...");
        SearchBarPatients.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SearchBarPatientsFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SearchBarPatientsFocusLost(evt);
            }
        });

        SearchPatients.setBackground(new java.awt.Color(28, 158, 153));
        SearchPatients.setForeground(new java.awt.Color(250, 250, 250));
        SearchPatients.setText("Buscar");
        SearchPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchPatientsActionPerformed(evt);
            }
        });

        PatientConsults.setBackground(new java.awt.Color(28, 158, 153));
        PatientConsults.setForeground(new java.awt.Color(250, 250, 250));
        PatientConsults.setText("Consultas");

        PatientExams.setBackground(new java.awt.Color(28, 158, 153));
        PatientExams.setForeground(new java.awt.Color(250, 250, 250));
        PatientExams.setText("ExÃ¡menes");

        PatientsTable.setBackground(new java.awt.Color(240, 240, 240));
        PatientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No. Expediente", "Identidad", "Primer Nombre", "Segundo Nombre", "Primer Apellido", "Segundo Apellido", "Genero", "Edad", "Telefono", "Fecha de Nacimiento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(PatientsTable);
        if (PatientsTable.getColumnModel().getColumnCount() > 0) {
            PatientsTable.getColumnModel().getColumn(6).setPreferredWidth(35);
            PatientsTable.getColumnModel().getColumn(7).setPreferredWidth(20);
        }

        CreatePatient.setBackground(new java.awt.Color(28, 158, 153));
        CreatePatient.setForeground(new java.awt.Color(250, 250, 250));
        CreatePatient.setText("Agregar");
        CreatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreatePatientActionPerformed(evt);
            }
        });

        CreateConsultPatient.setBackground(new java.awt.Color(28, 158, 153));
        CreateConsultPatient.setForeground(new java.awt.Color(250, 250, 250));
        CreateConsultPatient.setText("Crear Consulta");
        CreateConsultPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateConsultPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SearchBarPatients, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchPatients, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(PatientConsults, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PatientExams, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(CreateConsultPatient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CreatePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchBarPatients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchPatients)
                    .addComponent(PatientConsults)
                    .addComponent(PatientExams)
                    .addComponent(CreateConsultPatient)
                    .addComponent(CreatePatient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE))
        );

        ProgramPanel.addTab("Pacientes", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        ConsultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No. Expediente", "Id Consulta", "Primer Nombre", "Primer Apellido", "Motivo Consulta", "Ordenes Medicas", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ConsultsTable);

        SearchConsults.setBackground(new java.awt.Color(28, 158, 153));
        SearchConsults.setForeground(new java.awt.Color(250, 250, 250));
        SearchConsults.setText("Buscar");
        SearchConsults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchConsultsActionPerformed(evt);
            }
        });

        SearchBarConsults.setForeground(Color.GRAY);
        SearchBarConsults.setText("No. Expediente, Motivo de Consulta...");
        SearchBarConsults.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SearchBarConsultsFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SearchBarConsultsFocusLost(evt);
            }
        });
        SearchBarConsults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBarConsultsActionPerformed(evt);
            }
        });

        CreateConsult.setBackground(new java.awt.Color(28, 158, 153));
        CreateConsult.setForeground(new java.awt.Color(250, 250, 250));
        CreateConsult.setText("Ingresar");
        CreateConsult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateConsultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 877, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(SearchBarConsults, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchConsults, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CreateConsult, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchBarConsults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchConsults)
                    .addComponent(CreateConsult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        ProgramPanel.addTab("Consultas", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        ExamsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "No. Expediente", "Id Consulta", "Tipo Examen"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(ExamsTable);

        SearchExams.setBackground(new java.awt.Color(28, 158, 153));
        SearchExams.setForeground(new java.awt.Color(250, 250, 250));
        SearchExams.setText("Buscar");

        SearchBarExams.setForeground(Color.GRAY);
        SearchBarExams.setText("No. Expediente, Nombre, Apellido...");
        SearchBarExams.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SearchBarExamsFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SearchBarExamsFocusLost(evt);
            }
        });

        CreateExam.setBackground(new java.awt.Color(28, 158, 153));
        CreateExam.setForeground(new java.awt.Color(250, 250, 250));
        CreateExam.setText("Agregar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 877, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(SearchBarExams, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchExams, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CreateExam, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchBarExams, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchExams)
                    .addComponent(CreateExam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE))
        );

        ProgramPanel.addTab("ExÃ¡menes", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        PendingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No. Expediente", "Id Consulta", "Primer Nombre", "Primer Apellido"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(PendingTable);

        SearchPending.setBackground(new java.awt.Color(28, 158, 153));
        SearchPending.setForeground(new java.awt.Color(250, 250, 250));
        SearchPending.setText("Buscar");
        SearchPending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchPendingActionPerformed(evt);
            }
        });

        SearchBarPending.setForeground(Color.GRAY);
        SearchBarPending.setText("No. Expediente, Motivo de Consulta...");
        SearchBarPending.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SearchBarPendingFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SearchBarPendingFocusLost(evt);
            }
        });
        SearchBarPending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBarPendingActionPerformed(evt);
            }
        });

        DispatchConsult.setBackground(new java.awt.Color(28, 158, 153));
        DispatchConsult.setForeground(new java.awt.Color(250, 250, 250));
        DispatchConsult.setText("Despachar");
        DispatchConsult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispatchConsultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 877, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(SearchBarPending, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchPending, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DispatchConsult, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchBarPending, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchPending)
                    .addComponent(DispatchConsult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        ProgramPanel.addTab("Pendientes", jPanel4);

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 559, Short.MAX_VALUE)
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 354, Short.MAX_VALUE)
        );

        MainPanel.setLayer(ProgramPanel, javax.swing.JLayeredPane.MODAL_LAYER);
        MainPanel.setLayer(LoginPanel, javax.swing.JLayeredPane.PALETTE_LAYER);

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ProgramPanel)
            .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(LoginPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ProgramPanel, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(LoginPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenu1.setText("Tabla");

        Reload.setText("Recargar");
        Reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReloadActionPerformed(evt);
            }
        });
        jMenu1.add(Reload);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchBarPatientsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchBarPatientsFocusGained
        if (SearchBarPatients.getText().equals("No. Expediente, Nombre, Apellido...")) {
            SearchBarPatients.setText("");
            SearchBarPatients.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_SearchBarPatientsFocusGained

    private void SearchBarPatientsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchBarPatientsFocusLost
        if (SearchBarPatients.getText().equals("")) {
            SearchBarPatients.setText("No. Expediente, Nombre, Apellido...");
            SearchBarPatients.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_SearchBarPatientsFocusLost

    private void SearchBarConsultsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchBarConsultsFocusGained
        if (SearchBarConsults.getText().equals("No. Expediente, Motivo de Consulta...")) {
            SearchBarConsults.setText("");
            SearchBarConsults.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_SearchBarConsultsFocusGained

    private void SearchBarConsultsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchBarConsultsFocusLost
        if (SearchBarConsults.getText().equals("")) {
            SearchBarConsults.setText("No. Expediente, Motivo de Consulta...");
            SearchBarConsults.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_SearchBarConsultsFocusLost

    private void SearchBarExamsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchBarExamsFocusGained
        if (SearchBarExams.getText().equals("No. Expediente, Nombre, Apellido...")) {
            SearchBarExams.setText("");
            SearchBarExams.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_SearchBarExamsFocusGained

    private void SearchBarExamsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchBarExamsFocusLost
        if (SearchBarExams.getText().equals("")) {
            SearchBarExams.setText("No. Expediente, Nombre, Apellido...");
            SearchBarExams.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_SearchBarExamsFocusLost

    private void SearchBarConsultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBarConsultsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBarConsultsActionPerformed

    private void CreatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreatePatientActionPerformed
        Agregar mod = new Agregar(ProgramPanel.getSelectedIndex(), PatientsTable);
        mod.setVisible(true);
    }//GEN-LAST:event_CreatePatientActionPerformed

    private void ReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReloadActionPerformed
        load();
        loadConsult();
        loadPending();
    }//GEN-LAST:event_ReloadActionPerformed

    private void SearchPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchPatientsActionPerformed
        PatientSearch();
    }//GEN-LAST:event_SearchPatientsActionPerformed

    private void CreateConsultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateConsultActionPerformed
        PreCheck mod = new PreCheck(null);
        mod.setVisible(true);
    }//GEN-LAST:event_CreateConsultActionPerformed

    private void SearchConsultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchConsultsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchConsultsActionPerformed

    private void SearchPendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchPendingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchPendingActionPerformed

    private void SearchBarPendingFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchBarPendingFocusGained
        if (SearchBarPending.getText().equals("No. Expediente, Motivo de Consulta...")) {
            SearchBarPending.setText("");
            SearchBarPending.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_SearchBarPendingFocusGained

    private void SearchBarPendingFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchBarPendingFocusLost
        if (SearchBarPending.getText().equals("")) {
            SearchBarPending.setText("No. Expediente, Motivo de Consulta...");
            SearchBarPending.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_SearchBarPendingFocusLost

    private void SearchBarPendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBarPendingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBarPendingActionPerformed

    private void DispatchConsultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DispatchConsultActionPerformed
        try {
            if (PendingTable.getSelectedRow() != -1) {
                CreateConsult mod = new CreateConsult((Integer)PendingTable.getModel().getValueAt(PendingTable.getSelectedRow(), 1));
                mod.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Ha ocurrido algun error inesperadamente esperado\nPruebe:\n -Seleccionar un paciente", "ERROR1", JOptionPane.ERROR_MESSAGE);
            }
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido algun error inesperadamente esperado\n"+e.toString(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DispatchConsultActionPerformed

    private void CreateConsultPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateConsultPatientActionPerformed
        try {
            if (PatientsTable.getSelectedRow() != -1) {
                PreCheck mod = new PreCheck((String)PatientsTable.getModel().getValueAt(PatientsTable.getSelectedRow(), 0));
                mod.setVisible(true);
            }
            else {
                PreCheck mod = new PreCheck(null);
                mod.setVisible(true);
            }
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Ha ocurrido algun error inesperadamente esperado\nPruebe:\n -Seleccionar un paciente", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CreateConsultPatientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    
    public void load() {
        DefaultTableModel _patients = (DefaultTableModel) PatientsTable.getModel();
        _patients.setRowCount(0);
        System.out.println("Correcto");
        ResultSet res = Conexion.Consulta("SELECT * FROM pacientes"); // INNER JOIN Declaracion_Aduanera USING(Id_Paquete)
        try {
            int cont = 0;
            while (res.next()) {
                cont++;
                Vector v = new Vector();
                v.add(res.getString(1));    //No_expediente
                //v.add(res.getInt(2));       //id_paciente
                v.add(res.getString(3));    //identidad
                v.add(res.getString(4));    //primer_nombre
                v.add(res.getString(5));    //segundo_nombre
                v.add(res.getString(6));    //primer_apellido
                v.add(res.getString(7));    //segundo_apellido
                v.add(res.getString(8));    //genero
                v.add(res.getInt(9));       //Edad
                v.add(res.getString(10));   //Telefono
                v.add(res.getDate(11));     //Fecha de Nacimiento
                System.out.println(v);
                _patients.addRow(v);
                PatientsTable.setModel(_patients);
            }
        } catch (SQLException e) {
            
        }
    }
    
    public void loadConsult() {
        DefaultTableModel _consults = (DefaultTableModel) ConsultsTable.getModel();
        _consults.setRowCount(0);
        System.out.println("Correcto");
        ResultSet res = Conexion.Consulta("SELECT p.no_expediente no_expediente, "
                + "c.id_consulta, p.primer_nombre, p.primer_apellido, c.motivo_consulta, c.ordenes_medicas, c.estado "
                + "FROM consultas c inner join pacientes p on(p.id_paciente = c.id_paciente)"); // INNER JOIN Declaracion_Aduanera USING(Id_Paquete)
        try {
            int cont = 0;
            while (res.next()) {
                cont++;
                Vector v = new Vector();
                v.add(res.getString(1));    //no_expediente
                v.add(res.getInt(2));       //id_consulta
                v.add(res.getString(3));    //primer_nombre
                v.add(res.getString(4));    //primer_apellido
                v.add(res.getString(5));    //motivo_consulta
                v.add(res.getString(6));    //ordenes_medicas
                v.add(res.getString(7));    //estado
                //System.out.println(v);
                _consults.addRow(v);
                ConsultsTable.setModel(_consults);
            }
        } catch (SQLException e) {
            
        }
    }
    
    public void loadPending() {
        DefaultTableModel _pending = (DefaultTableModel) PendingTable.getModel();
        _pending.setRowCount(0);
        System.out.println("Correcto");
        ResultSet res = Conexion.Consulta("SELECT p.no_expediente no_expediente, "
                + "c.id_consulta, p.primer_nombre, p.primer_apellido "
                + "FROM consultas c inner join pacientes p on(p.id_paciente = c.id_paciente) where c.estado like 'CONSULTA'"); // INNER JOIN Declaracion_Aduanera USING(Id_Paquete)
        try {
            int cont = 0;
            while (res.next()) {
                cont++;
                Vector v = new Vector();
                v.add(res.getString(1));    //no_expediente
                v.add(res.getInt(2));       //id_consulta
                v.add(res.getString(3));    //primer_nombre
                v.add(res.getString(4));    //primer_apellido
                //System.out.println(v);
                _pending.addRow(v);
                PendingTable.setModel(_pending);
            }
        } catch (SQLException e) {
            
        }
    }
    
    public void PatientSearch() {
        if (SearchBarPatients.getText().equals("No. Expediente, Nombre, Apellido...") ||
                SearchBarPatients.getText().equals("")) {
            load();
            return;
        }
        String busqueda = SearchBarPatients.getText();
        DefaultTableModel _patients = (DefaultTableModel) PatientsTable.getModel();
        _patients.setRowCount(0);
        System.out.println("Correcto\t ");
        ResultSet res = Conexion.Consulta("SELECT * FROM pacientes "
                + "where primer_nombre like '%"+busqueda+"%' "
                + "or segundo_nombre like '%"+busqueda+"%' "
                + "or primer_apellido like '%"+busqueda+"%' "
                + "or segundo_apellido like '%"+busqueda+"%' "
                + "or no_expediente like '%"+busqueda+"%'"); // INNER JOIN Declaracion_Aduanera USING(Id_Paquete)
        try {
            while (res.next()) {
                Vector v = new Vector();
                System.out.println("hola");
                System.out.println(res.getString(1));
                v.add(res.getString(1));    //No_expediente
                //v.add(res.getInt(2));       //id_paciente
                v.add(res.getString(3));    //identidad
                v.add(res.getString(4));    //primer_nombre
                v.add(res.getString(5));    //segundo_nombre
                v.add(res.getString(6));    //primer_apellido
                v.add(res.getString(7));    //segundo_apellido
                v.add(res.getString(8));    //genero
                v.add(res.getInt(9));       //Edad
                v.add(res.getString(10));   //Telefono
                v.add(res.getDate(11));     //Fecha de Nacimiento
                System.out.println(v);
                _patients.addRow(v);
                PatientsTable.setModel(_patients);
            }
        } catch (SQLException e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ConsultsTable;
    private javax.swing.JButton CreateConsult;
    private javax.swing.JButton CreateConsultPatient;
    private javax.swing.JButton CreateExam;
    private javax.swing.JButton CreatePatient;
    private javax.swing.JButton DispatchConsult;
    private javax.swing.JTable ExamsTable;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JLayeredPane MainPanel;
    private javax.swing.JButton PatientConsults;
    private javax.swing.JButton PatientExams;
    private javax.swing.JTable PatientsTable;
    private javax.swing.JTable PendingTable;
    private javax.swing.JTabbedPane ProgramPanel;
    private javax.swing.JMenuItem Reload;
    private javax.swing.JTextField SearchBarConsults;
    private javax.swing.JTextField SearchBarExams;
    private javax.swing.JTextField SearchBarPatients;
    private javax.swing.JTextField SearchBarPending;
    private javax.swing.JButton SearchConsults;
    private javax.swing.JButton SearchExams;
    private javax.swing.JButton SearchPatients;
    private javax.swing.JButton SearchPending;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
